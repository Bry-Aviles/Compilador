###Direccionamientos

IMM=[["adca", "89", 2], ["adcb", "C9", 2], ["adda", "8B", 2], ["addb", "CB", 2], ["addd", "C3", 3], ["anda", "84", 2],["andb", "C4", 2],
["bita", "85", 2],["bitb", "C5", 2], ["cmpa", "81", 2],["cmpb", "C1", 2], ["cpd","1A83",4],["cpx","8C",3],["cpy","188C",4],["eora","88",2],
["eorb", "C8",2],["ldaa","86",2],["ldab","C6",2],["ldd","CC",3],["lds","8E",3],["ldx","CE",3],["ldy","18CE",4],["oraa","8A",2],["orab","CA",2],
["sbca","82",2],["sbcb","C2",2],["suba","80",2],["subb","C0",2],["subd","83",3]]

DIR=[["adca", "99", 2], ["adcb", "D9", 2], ["adda", "9B", 2], ["addb", "DB", 2], ["addd", "D3", 2], ["anda", "94", 2],["andb", "D4", 2],["bclr", "15",3],
["bita", "95", 2], ["bitb", "D5", 2], ["brclr", "13", 4], ["brset", "12", 4], ["bset", "14",3],["cmpa", "91", 2],["cmpb", "D1", 2], ["cpd","1A93",3],["cpx","9C",2],["cpy","189C",3],
["eora","98",2],["eorb", "D8",2], ["jsr", "9D", 2] ,["ldaa","96",2], ["ldab","D6",2],["ldd","DC",2],["lds","9E",2],["ldx","DE",2],["ldy","18DE",3],  
["oraa","9A",2],["orab","DA",2],["sbca","92",2],["sbcb","D2",2], ["staa", "97", 2], ["stab", "D7", 2], ["std", "DD", 2], ["sts", "9F", 2],
["stx", "DF", 2], ["sty", "18DF", 3], ["suba","90",2], ["subb","D0",2],["subd","93",2]]

INDX=[["adca", "A9", 2], ["adcb", "E9", 2], ["adda", "AB", 2], ["addb", "EB", 2], ["addd", "E3", 2], ["anda", "B4", 2],["andb", "E4", 2],["asl", "68",2],
["asr", "67", 2], ["bclr", "1D", 3], ["bita", "A5", 2], ["bitb", "E5", 2], ["brclr", "1F",4],["brset", "1E", 4],["bset", "1C", 3], ["clr","6F",2],["cmpa","A1",2],["cmpb","E1",2],
["com","63",2],["cpd", "1AA3",3], ["cpx", "AC", 2] ,["cpy","1AAC",3], ["dec","6A",2],["eora","A8",2],["eorb","E8",2],["inc","6C",2],["jsr","AD",2],  
["ldaa","A6",2],["ldab","E6",2],["ldd","EC",2],["lds","AE",2],["ldx","EE",2],["ldy","1AEE",3],["lsl","68",2],["lsr","64",2],["neg","60",2],["oraa","AA",2], ["orab", "EA", 2], 
["rol", "69", 2], ["ror", "66", 2], ["sbca", "A2", 2],["sbcb", "E2", 2], ["staa", "A7", 2], ["stab","E7",2], ["std","ED",2],["sts","AF",2], ["stx","EF",2],["sty","1AEF",3],
["suba","A0",2],["subb","E0",2],["subd","A3",2],["tst","6D",2]]

INDY=[["adca", "18A9", 3], ["adcb", "18E9", 3], ["adda", "18AB", 3], ["addb", "18EB", 3], ["addd", "18E3", 3], ["anda", "18A4", 3],["andb", "18A4", 3],["asl", "1868",3],
["asr", "1867", 3], ["bclr", "181D", 4], ["bita", "18A5", 3], ["bitb", "18E5", 3], ["brclr", "181F",5],["brset", "181E", 5],["bset", "181C", 4], ["clr","186F",3],["cmpa","18A1",3],["cmpb","18E1",3],
["com","1863",3],["cpd", "CDA3",3], ["cpx", "CDAC", 3] ,["cpy","18AC",3], ["dec","186A",3],["eora","18A8",3],["eorb","18E8",3],["inc","186C",3],["jsr","18AD",3],  
["ldaa","18A6",3],["ldab","18E6",3],["ldd","18EC",3],["lds","18AE",3],["ldx","CDEE",3],["ldy","18EE",3],["lsl","1868",3],["lsr","1864",3],["neg","1860",3],["oraa","18AA",3], ["orab", "18EA", 3], 
["rol", "1869", 3], ["ror", "1866", 3], ["sbca", "18A2", 3],["sbcb", "18E2", 3], ["staa", "18A7", 3], ["stab","18E7",3], ["std","18ED",3],["sts","18AF",3], ["stx","CDEF",3],["sty","18EF",3],
["suba","18A0",3],["subb","18E0",3],["subd","18A3",3],["tst","186D",3]]

EXT=[["adca", "B9", 3], ["adcb", "F9", 3], ["adda", "BB", 3], ["addb", "FB", 3], ["addd", "F3", 3], ["anda", "B4", 3],["andb", "F4", 3],["asl", "78",3],
["asr", "77", 3],["bita", "B5", 3], ["bitb", "F5", 3],["clr","7F",3],["cmpa","B1",3],["cmpb","F1",3],["com","73",3],["cpd", "1AB3",4],
["cpx", "BC", 3] ,["cpy","18BC",4], ["dec","7A",3],["eora","B8",3],["eorb","F8",3],["inc","7C",3],["jmp","7E",3],["jsr","BD",3]  
["ldaa","B6",3],["ldab","F6",3],["ldd","FC",3],["lds","BE",3],["ldx","FE",3],["ldy","18FE",4],["lsl","78",3],["lsr","74",3],["neg","70",3],["oraa","BA",3], ["orab", "FA", 3], 
["rol", "79", 3], ["ror", "76", 3], ["sbca", "B2", 3],["sbcb", "F2", 3], ["staa", "B7", 3], ["stab","F7",3], ["std","FD",3],["sts","BF",3], ["stx","FF",3],["sty","FF",4],
["suba","B0",3],["subb","F0",3],["subd","B3",3],["tst","7D",3]]

INH=[["aba", "1B", 1], ["abx", "3A", 1], ["aby", "183A", 2], ["asla", "48", 1], ["aslb", "58", 1], ["asld", "5", 1],["asra", "47", 1],["asrb","57",1],
["cba", "11", 1],["clc", "0C", 1], ["cli", "0E", 1],["clra","4F",1],["clrb","5F",1],["clv","0A",1],["coma","43",1],["comb", "53",1],
["daa", "19", 1] ,["deca","4A",1], ["decb","5A",1],["des","34",1],["dex","09",1],["dey","1809",2], ["fdiv", "03", 1],["idiv", "02", 1], ["inca", "4C", 1],["incb","5C",1],
["ins","31",1],["inx","08",1],["iny","1808",2],["lsla", "48",1], ["lslb", "58", 1] ,["lsld","05",1], ["lsra","44",1],["lsrb","54",1],["lsrd","04",1], ["mul","3D",1],
["nega","40",1], ["negb","50",1],["nop","01",1],["psha","36",1],["pshb","37",1],["pshx","3C",1],["pshy","183C",2], ["pula","32",1],["pulb","33",1], ["pulx","38",1],
["puly","1838",2],["rola","49",1],["rolb","59",1],["rora","46",1],["rorb","56",1], ["rti","3B",1],["rts","39",1], ["sba","10",1],["sec","OD",1],["sei","OF",1],["sev","OB",1],
["stop","CF",1],["swi","3F",1], ["tab","16",1],["tap","06",1], ["tba","17",1],["tets","00",--],["tpa","07",1],["tsta","4D",1],["tstb","5D",1],["tsx","30",1], ["tsy","1830",2],
["txs","35",1], ["tys","1835",2],["wai","3E",1],["xgdx","8F",1],["xgdy","188F",2]]

REL=[["bcc", "24", 2], ["bcs", "25", 2], ["beq", "27", 2], ["bge", "2C", 2], ["bgt", "2E", 2], ["bhi", "22", 2],["bhs", "24", 2],["ble", "2F",2], ["blo", "25", 2],
["bls", "23", 2] ,["blt","2D",2], ["bmi","2B",2],["bne","26",2],["bpl","2A",2],["bra","20",2], ["brn", "21", 2],["bsr", "8D", 2],["bvc", "28", 2] ,["bvs","29",2]]

def Variables(renglon, lista):
	mensaje = renglon.find ("EQU")
	if(mensaje !=-1):
		instruccion = renglon[0:mensaje]
		instruccion = instruccion.strip()
		operando = renglon[mensaje+3:len(renglon)]
		operando = operando.strip()
		lista.append([instruccion, operando])
	return lista




def EnumReng(posicion,cadena,listaReng):	 

	listaReng.append([posicion, cadena])
	return listaReng



def QuitarAsteriscos(cadena):
	recorte =cadena.find('*')

	if(recorte!=-1):
		
		cadena= cadena[0:recorte]
	return cadena



def Etiquetas(cadenas, listaEti):
	
	if (cadenas[0]!=" " and cadenas[0]!="*" ):
		cadenas=cadenas[0:cadenas.find(" ")]


		listaEti.append(cadenas)

	return listaEti

#############################################################################
##########                Menú principal                        #########
#############################################################################


listaVar =[]
listaReng =[]
Etiqueta = []
ocurrencias = ""
Enumeracion = ""
equ = "EQU"
N=0


 #Manda las lineas del archivo a la función Variables

with open ('EJEMPLO.ASC') as lineas: 
	for linea in lineas:  
		ocurrencias=linea
		if(ocurrencias.find("ORG")!=-1):		
			break
		listaVar = Variables(ocurrencias , listaVar)




#MCodigo para enumerar archivos

with open ('EJEMPLO.ASC') as lineas:    
	bandera=0
	cont=1
	for linea in lineas:
		Enumeracion=linea
		Enumeracion=Enumeracion.strip()
		Enumeracion= QuitarAsteriscos(Enumeracion)

		if(Enumeracion.find("ORG")!=-1):
			bandera =1

		if(bandera == 1 and len(Enumeracion)!=0):


			listaReng = EnumReng(cont,Enumeracion,listaReng) 
			cont=cont+1





#Para lista de etiquetas
with open ('EJEMPLO.ASC') as lineas: 
	bandera=0
	for linea in lineas:  
		
		if(linea.find("ORG")!=-1):
			bandera =1



		if(bandera == 1 and len(linea.strip())!=0):

			Etiqueta = Etiquetas(linea, Etiqueta)







for i in listaReng:
	print(i)






